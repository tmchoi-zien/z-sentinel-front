"use client";

import Button from "@/components/commons/Button";
import * as TEXT from "@/locale/ko/modal.json";
import { useState } from "react";

const m = TEXT["vulnerability-detail"];

export default function VulnerabilityDetail() {
  const [show, setShow] = useState(false);

  return (
    <>
      {/* Header */}
      <div>
        <Highlighter value={"High 10"} className="text-sm" />
        <div className="mt-[10px] text-lg font-bold">{"CVE-2009-3245"}</div>
      </div>

      <div className="flex flex-col gap-[30px] mt-[30px]">
        {/* Info */}
        <div className="flex flex-col gap-[12px] text-sm">
          <div className="flex flex-row gap-[20px]">
            <span className="w-[62px] text-gray">Published</span>
            <span>2010-03-05T19:30:00.343</span>
          </div>
          <div className="flex flex-row gap-[20px]">
            <span className="w-[62px] text-gray">CWE</span>
            <span>CWE-CWE-20</span>
          </div>
        </div>

        {/* More */}
        <div className="flex flex-row gap-[10px]">
          <Button text={"CVE.org"} icon={"/icons/link_external.svg"} />
          <Button text={"CVEdetails.com"} icon={"/icons/link_external.svg"} />
        </div>

        {/* Description */}
        <div className="flex flex-col gap-[15px]">
          <div className="text-main-color text-[15px]">Description</div>
          <div className="py-[25px] px-[20px] bg-[#151a26] rounded-[15px] font-normal">
            Description: SQL Injection (SQLi) is a web security vulnerability
            that allows an attacker to interfere with an application's database
            queries. It occurs when user input is improperly sanitized and
            directly embedded into SQL statements, enabling attackers to
            manipulate the database.
          </div>
        </div>

        {/* Severity */}
        <div className="flex flex-col gap-[15px]">
          <div className="text-main-color text-[15px]">Severity</div>
          <div className="font-bold text-[14px]">CVSS Version 2</div>
          <div className="py-[25px] px-[20px] bg-[#151a26] rounded-[15px] font-normal">
            <div className="flex flex-col gap-[10px]">
              <div className="flex gap-[10px] text-sm">
                <span>Base Score</span>{" "}
                <Highlighter value={"High 10"} className="text-xs" />
              </div>
              <div className="text-gray">
                Vector : txttxtxttxtttxtxtxtxtxtxtxttxt xttxtxtxtxttxtxttxtxtxt
                xtxtxtxtxtxtxxtxttxtxtx
              </div>
              <div className="flex gap-[10px] text-sm">
                <span>Exploitability Score</span>{" "}
                <Highlighter value={"10"} className="text-xs" />
              </div>
              <div className="flex gap-[10px] text-sm">
                <span>Impact Score</span>{" "}
                <Highlighter value={"10"} className="text-xs" />
              </div>
            </div>
          </div>
        </div>

        {/* Products affected */}
        <div className="flex flex-col gap-[15px]">
          <div className="flex flex-row justify-between">
            <div className="text-main-color text-[15px]">Product affected</div>
            <div
              className="text-[15px] underline cursor-pointer"
              onClick={() => setShow(!show)}
            >
              More
            </div>
          </div>
          <div
            className={`
              py-[25px] px-[20px] bg-[#151a26] rounded-[15px]
            `}
          >
            <div
              className={`
                overflow-hidden ${show ? "max-h-none" : "max-h-[calc(1.5rem*10)]"}
              `}
            >
              <p className={`font-normal`}>
                Description: SQL Injection (SQLi) is a web security
                vulnerability that allows an attacker to interfere with an
                application's database queries. It occurs when user input is
                improperly sanitized and directly embedded into SQL statements,
                enabling attackers to manipulate the database. Description: SQL
                Injection (SQLi) is a web security vulnerability that allows an
                attacker to interfere with an application's database queries. It
                occurs when user input is improperly sanitized and directly
                embedded into SQL statements, enabling attackers to manipulate
                the database. Description: SQL Injection (SQLi) is a web
                security vulnerability that allows an attacker to interfere with
                an application's database queries. It occurs when user input is
                improperly sanitized and directly embedded into SQL statements,
                enabling attackers to manipulate the database. Description: SQL
                Injection (SQLi) is a web security vulnerability that allows an
                attacker to interfere with an application's database queries. It
                occurs when user input is improperly sanitized and directly
                embedded into SQL statements, enabling attackers to manipulate
                the database.
              </p>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

interface Props {
  value: string;
  color?: string;
  className?: string;
}

function Highlighter({ value, color, className }: Props) {
  // const boxSize = size === "lg" : "py-"
  const bgColor = `bg-${color ? color : "[#7209B7]"}`;
  return (
    <div
      className={`
        ${bgColor} inline-block py-[3px] px-[10px] rounded-md
        ${className ? className : ""}
      `}
    >
      {value}
    </div>
  );
}
