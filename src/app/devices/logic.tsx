"use client";
import { useEffect, useState } from "react";

import devicesDto from "@/dto/devicesDto";

const MOCK = {
  content: [
    {
      assetIdx: 5,
      workType: "New",
      serviceName: "샘플데이터추출",
      type: null,
      inspectionType: null,
      openDay: "2025-01-03",
      dueDay: null,
      infraRequestDay: "12/30",
      pentestRequestDay: null,
      countInfra: 13,
      countPentest: 0,
      countInfraWorkDone: 10,
      countPentestWorkDone: null,
      countInfraFixDone: 0,
      countPentestFixDone: null,
      countInfraReIng: 0,
      countPentestReIng: 0,
      countInfraReRequest: 0,
      countPentestReRequest: 0,
      status: "RI",
      statusInfraWorkDone: false,
      statusInfraFixDone: false,
      statusPentestWorkDone: null,
      statusPentestFixDone: null,
      infraRemainedVulnCount: null,
      infraFindVulnCount: null,
      pentestRemainedVulnCount: null,
      pentestFindVulnCount: null,
      percent: null,
      reportPath: null,
      year: 2024,
      sso1SaUser: "hr.park",
      sso1Name: "박한렬",
      sso1PositionLevel: "선임연구원",
      sso2SaUser: null,
      sso2Name: null,
      sso2PositionLevel: null,
      sso3SaUser: null,
      sso3Name: null,
      sso3PositionLevel: null,
      sso4SaUser: null,
      sso4Name: null,
      sso4PositionLevel: null,
    },
    {
      assetIdx: 4,
      workType: "New",
      serviceName: "infra",
      type: null,
      inspectionType: null,
      openDay: "2024-12-04",
      dueDay: null,
      infraRequestDay: "12/04",
      pentestRequestDay: null,
      countInfra: 7,
      countPentest: 3,
      countInfraWorkDone: 0,
      countPentestWorkDone: 0,
      countInfraFixDone: 0,
      countPentestFixDone: 0,
      countInfraReIng: 0,
      countPentestReIng: 0,
      countInfraReRequest: 0,
      countPentestReRequest: 0,
      status: "PRI",
      statusInfraWorkDone: false,
      statusInfraFixDone: false,
      statusPentestWorkDone: false,
      statusPentestFixDone: false,
      infraRemainedVulnCount: null,
      infraFindVulnCount: null,
      pentestRemainedVulnCount: null,
      pentestFindVulnCount: null,
      percent: null,
      reportPath: null,
      year: 2024,
      sso1SaUser: "mk.son",
      sso1Name: "손민경",
      sso1PositionLevel: "팀장",
      sso2SaUser: null,
      sso2Name: null,
      sso2PositionLevel: null,
      sso3SaUser: null,
      sso3Name: null,
      sso3PositionLevel: null,
      sso4SaUser: null,
      sso4Name: null,
      sso4PositionLevel: null,
    },
    {
      assetIdx: 3,
      workType: "New",
      serviceName: "점검신청 test 01",
      type: null,
      inspectionType: null,
      openDay: "2025-02-16",
      dueDay: null,
      infraRequestDay: "11/21",
      pentestRequestDay: "11/25",
      countInfra: 2,
      countPentest: 1,
      countInfraWorkDone: 2,
      countPentestWorkDone: 1,
      countInfraFixDone: 0,
      countPentestFixDone: 0,
      countInfraReIng: 0,
      countPentestReIng: 0,
      countInfraReRequest: 0,
      countPentestReRequest: 0,
      status: "PRI",
      statusInfraWorkDone: true,
      statusInfraFixDone: false,
      statusPentestWorkDone: true,
      statusPentestFixDone: false,
      infraRemainedVulnCount: 36,
      infraFindVulnCount: null,
      pentestRemainedVulnCount: 5,
      pentestFindVulnCount: null,
      percent: null,
      reportPath: null,
      year: 2024,
      sso1SaUser: "mk.son",
      sso1Name: "손민경",
      sso1PositionLevel: "팀장",
      sso2SaUser: null,
      sso2Name: null,
      sso2PositionLevel: null,
      sso3SaUser: null,
      sso3Name: null,
      sso3PositionLevel: null,
      sso4SaUser: null,
      sso4Name: null,
      sso4PositionLevel: null,
    },
    {
      assetIdx: 2,
      workType: "New",
      serviceName: "dd",
      type: null,
      inspectionType: null,
      openDay: "2024-11-30",
      dueDay: null,
      infraRequestDay: "11/19",
      pentestRequestDay: "11/19",
      countInfra: 4,
      countPentest: 1,
      countInfraWorkDone: 4,
      countPentestWorkDone: 1,
      countInfraFixDone: 0,
      countPentestFixDone: 1,
      countInfraReIng: 0,
      countPentestReIng: 0,
      countInfraReRequest: 4,
      countPentestReRequest: 0,
      status: "PR",
      statusInfraWorkDone: true,
      statusInfraFixDone: false,
      statusPentestWorkDone: true,
      statusPentestFixDone: true,
      infraRemainedVulnCount: 72,
      infraFindVulnCount: null,
      pentestRemainedVulnCount: null,
      pentestFindVulnCount: null,
      percent: null,
      reportPath: null,
      year: 2024,
      sso1SaUser: "mk.son",
      sso1Name: "손민경",
      sso1PositionLevel: "팀장",
      sso2SaUser: null,
      sso2Name: null,
      sso2PositionLevel: null,
      sso3SaUser: null,
      sso3Name: null,
      sso3PositionLevel: null,
      sso4SaUser: null,
      sso4Name: null,
      sso4PositionLevel: null,
    },
    {
      assetIdx: 1,
      workType: "New",
      serviceName: "Test Project",
      type: null,
      inspectionType: null,
      openDay: "2024-11-30",
      dueDay: null,
      infraRequestDay: "11/18",
      pentestRequestDay: "11/19",
      countInfra: 4,
      countPentest: 1,
      countInfraWorkDone: 0,
      countPentestWorkDone: 0,
      countInfraFixDone: 0,
      countPentestFixDone: 0,
      countInfraReIng: 0,
      countPentestReIng: 0,
      countInfraReRequest: 0,
      countPentestReRequest: 0,
      status: "I",
      statusInfraWorkDone: false,
      statusInfraFixDone: false,
      statusPentestWorkDone: false,
      statusPentestFixDone: false,
      infraRemainedVulnCount: null,
      infraFindVulnCount: null,
      pentestRemainedVulnCount: null,
      pentestFindVulnCount: null,
      percent: null,
      reportPath: null,
      year: 2024,
      sso1SaUser: "mk.son",
      sso1Name: "손민경",
      sso1PositionLevel: "팀장",
      sso2SaUser: "jj.yu",
      sso2Name: "유재중",
      sso2PositionLevel: "팀장",
      sso3SaUser: "ws.kim",
      sso3Name: "김우성",
      sso3PositionLevel: "사원",
      sso4SaUser: "ws.kim",
      sso4Name: "김우성",
      sso4PositionLevel: "사원",
    },
  ],
  pageable: {
    sort: {
      empty: false,
      sorted: true,
      unsorted: false,
    },
    offset: 0,
    pageSize: 10,
    pageNumber: 0,
    paged: true,
    unpaged: false,
  },
  totalElements: 5,
  last: true,
  totalPages: 1,
  number: 0,
  size: 10,
  sort: {
    empty: false,
    sorted: true,
    unsorted: false,
  },
  numberOfElements: 5,
  first: true,
  empty: false,
};

export default function DevicesLogic() {
  const [page, setPage] = useState(0);
  const [totalPages, setTotalPages] = useState(0);

  // const {data: devices, isLaoding, error} = useQuery([`devices`, page], () => getData(), {
  //   onSuccess: (res) => {
  //     setTotalPages(res.totalPages);
  //   }
  // })
  const res = MOCK;

  useEffect(() => {
    setTotalPages(res.totalPages);
  }, []);

  const dtoData = res.content ? devicesDto(res.content) : null;

  return {
    data: dtoData,
    isLoading: false,
    error: "",
    page,
    setPage,
    totalPages,
  };
}
